tutorial source :
https://dylancastillo.co/elasticsearch-python/#what%E2%80%99s-elasticsearch

!!! had to downgrade numpy to  numpy==1.26.4 !!!

Create a Local Elasticsearch Cluster
docker run --rm -p 9200:9200 -p 9300:9300 -e "xpack.security.enabled=false" -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:8.14.1
or
------------ docker run --name es01 --net elastic -p 9200:9200 -it -m 1GB docker.elastic.co/elasticsearch/elasticsearch:8.14.1

reset via
docker exec -it es01 /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic
docker exec -it es01 /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana

docker cp es01:/usr/share/elasticsearch/config/certs/http_ca.crt .

in notebook : 

from elasticsearch import Elasticsearch

es = Elasticsearch("http://localhost:9200")
es.info().body


------------
dataset :
https://www.kaggle.com/datasets/jrobischon/wikipedia-movie-plots?ref=dylancastillo.co

name :
dataset_wiki_movies.csv
------------

in notebook : 

import pandas as pd

df = (
    pd.read_csv("wiki_movie_plots_deduped.csv")
    .dropna()
    .sample(5000, random_state=42)
    .reset_index()
)



CREATE INDEX

mappings = {
        "properties": {
            "title": {"type": "text", "analyzer": "english"},
            "ethnicity": {"type": "text", "analyzer": "standard"},
            "director": {"type": "text", "analyzer": "standard"},
            "cast": {"type": "text", "analyzer": "standard"},
            "genre": {"type": "text", "analyzer": "standard"},
            "plot": {"type": "text", "analyzer": "english"},
            "year": {"type": "integer"},
            "wiki_page": {"type": "keyword"}
    }
}

es.indices.create(index="movies", mappings=mappings)



----- TOKEN -----
✅ Elasticsearch security features have been automatically configured!
✅ Authentication is enabled and cluster connections are encrypted.

ℹ️  Password for the elastic user (reset with `bin/elasticsearch-reset-password -u elastic`):
  =ypsEcmzaxviWq46guZE

ℹ️  HTTP CA certificate SHA-256 fingerprint:
  7f87fda31e8302c1d5b46922ebf877facb64c1f33fbc0fb6a197a48cb62422ef

ℹ️  Configure Kibana to use this cluster:
• Run Kibana and click the configuration link in the terminal when Kibana starts.
• Copy the following enrollment token and paste it into Kibana in your browser (valid for the next 30 minutes):
  eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTcyLjE3LjAuMjo5MjAwIl0sImZnciI6IjdmODdmZGEzMWU4MzAyYzFkNWI0NjkyMmViZjg3N2ZhY2I2NGMxZjMzZmJjMGZiNmExOTdhNDhjYjYyNDIyZWYiLCJrZXkiOiJmelpqUlpBQklKdktKcXdwVVpCUToyUnNMVGJuNVFFMmE3RmU4STF2aUZBIn0=

ℹ️ Configure other nodes to join this cluster:
• Copy the following enrollment token and start new Elasticsearch nodes with `bin/elasticsearch --enrollment-token <token>` (valid for the next 30 minutes):
  eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTcyLjE3LjAuMjo5MjAwIl0sImZnciI6IjdmODdmZGEzMWU4MzAyYzFkNWI0NjkyMmViZjg3N2ZhY2I2NGMxZjMzZmJjMGZiNmExOTdhNDhjYjYyNDIyZWYiLCJrZXkiOiJnVFpqUlpBQklKdktKcXdwVVpCZTpGdDl5RG5WUlRmbWVtQ2FJdjg1SDd3In0=

  If you're running in Docker, copy the enrollment token and run:
  `docker run -e "ENROLLMENT_TOKEN=<token>" docker.elastic.co/elasticsearch/elasticsearch:8.14.1`